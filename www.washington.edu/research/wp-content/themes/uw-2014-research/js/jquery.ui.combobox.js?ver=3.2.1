/**
 * Created by gbueno on 12/8/2016.
 */

$.widget( 'custom.combobox', {
    options: {
        change: function ( event, ui ) {

        },
        disabled: false
    },
    _create: function () {
        this.wrapper = $( '<span>' ).addClass('custom-combobox').insertAfter( this.element );
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
    },
    _createAutocomplete: function () {
        var element = this.element;
        var selected = this.element.children( ':selected' );
        var value = selected.val() ? selected.text() : "";
        var combobox_class = 'custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left';
        var autocomplete_parameters = {
            delay: 0,
            minLength: 0,
            source: $.proxy( this, '_source' ),
            select: this.options.change,
            disabled: this.options.disabled
        };
        var tooltip_parameters = {
            classes: {
                'ui-tooltip': 'ui-state-highlight'
            }
        };
        var on_input_parameters = {
            autocompleteselect: function ( event, ui ) {
                ui.item.option.selected = true;
                this._trigger( 'select', event, {
                    item: ui.item.option
                } );
            },
            autocompletechange: '_removeIfInvalid'
        };

        this.input = $( '<input>' ).appendTo( this.wrapper ).val( value ).attr( 'title', '' ).addClass( combobox_class ).autocomplete( autocomplete_parameters ).tooltip( tooltip_parameters );
        this._on( this.input, on_input_parameters );
    },
    _createShowAllButton: function () {
        var input = this.input;
        var wasOpen = false;
        var button_parameters = {
            icons: {
                primary: 'ui-icon-triangle-1-s'
            },
            text: false
        };
        var on_mousedown_callback = function () {
            wasOpen = input.autocomplete( 'widget' ).is( ':visible' );
        };
        var on_click_callback = function () {
            input.trigger( 'focus' );

            if ( wasOpen ) {
                return;
            }

            input.autocomplete( 'search', '' );
        };

        $( '<a>' ).attr( 'tabindex', -1 ).attr( 'title', 'Show All Items').tooltip().appendTo( this.wrapper ).button( button_parameters ).removeClass( 'ui-corner-all' ).addClass( 'custom-combobox-toggle ui-corner-right' ).on( 'mousedown', on_mousedown_callback ).on( 'click', on_click_callback );
    },
    _source: function ( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex( request.term ), 'i' );
        response( this.element.children('option').map( function () {
            var text = $( this ).text();
            if ( this.value && ( !request.term || matcher.test( text ) ) ) {
                return {
                    label: text,
                    value: text,
                    option: this
                };
            }
        }) );
    },
    _removeIfInvalid: function ( event, ui ) {
        if ( ui.item ) {
            return;
        }

        var value = this.input.val();
        var valueLowerCase = value.toLowerCase();
        var valid = false;

        this.element.children( 'option' ).each( function () {
            if ( $( this ).text().toLowerCase() == valueLowerCase ) {
                this.selected = valid = true;
                return false;
            }
        } );

        if ( valid ) {
            return;
        }

        this.input.val( '' ).attr( 'title', value + " didn't match any item" ).tooltip( 'open' );
        this.element.val( '' );
        this._delay( function () {
            this.input.tooltip( 'close' ).attr( 'title', '');
        }, 2500 );
        this.input.autocomplete( 'instance' ).term = '';
    },
    _destroy: function () {
        this.wrapper.remove();
        this.element.show();
    }
});
